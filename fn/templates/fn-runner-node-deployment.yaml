apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-runner
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  replicas: {{ .Values.fn_runner.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        role: runner
    spec:
      {{- if .Values.fn_runner.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.fn_runner.nodeSelector | indent 8 }}
{{- end }}
      {{- if .Values.fn_runner.tolerations }}
      tolerations:
{{ toYaml .Values.fn_runner.tolerations | indent 8 }}
{{- end }}
      containers:
        - name: runner
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
          image: {{ .Values.fn_runner.image }}:{{ .Values.fn_runner.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
{{ toYaml .Values.fn_runner.resources | indent 12 }}
          securityContext:
            privileged: true
          ports:
            - containerPort: {{ .Values.fn_runner.grpc_port }}
          env:
            - name: FN_NODE_TYPE
              value: "pure-runner"
            - name: FN_GRPC_PORT
              value: {{ .Values.fn_runner.grpc_port | quote }}
          {{- range $key, $value := .Values.fn_runner.env }}
            {{- if $value }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
            - name: DOCKER_HOST
              value: unix://var/run/docker.sock
      volumes:
        - name: docker-graph-storage
          emptyDir: {}
